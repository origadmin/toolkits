// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: middleware/v1/metrics/metrics.proto

package metricsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of indicator (e.g. counter, timer, histogram, etc.)
type UserMetric_MetricType int32

const (
	UserMetric_METRIC_TYPE_UNSPECIFIED UserMetric_MetricType = 0
	UserMetric_METRIC_TYPE_COUNTER     UserMetric_MetricType = 1
	UserMetric_METRIC_TYPE_GAUGE       UserMetric_MetricType = 2
	UserMetric_METRIC_TYPE_HISTOGRAM   UserMetric_MetricType = 3
	UserMetric_METRIC_TYPE_SUMMARY     UserMetric_MetricType = 4
)

// Enum value maps for UserMetric_MetricType.
var (
	UserMetric_MetricType_name = map[int32]string{
		0: "METRIC_TYPE_UNSPECIFIED",
		1: "METRIC_TYPE_COUNTER",
		2: "METRIC_TYPE_GAUGE",
		3: "METRIC_TYPE_HISTOGRAM",
		4: "METRIC_TYPE_SUMMARY",
	}
	UserMetric_MetricType_value = map[string]int32{
		"METRIC_TYPE_UNSPECIFIED": 0,
		"METRIC_TYPE_COUNTER":     1,
		"METRIC_TYPE_GAUGE":       2,
		"METRIC_TYPE_HISTOGRAM":   3,
		"METRIC_TYPE_SUMMARY":     4,
	}
)

func (x UserMetric_MetricType) Enum() *UserMetric_MetricType {
	p := new(UserMetric_MetricType)
	*p = x
	return p
}

func (x UserMetric_MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserMetric_MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_middleware_v1_metrics_metrics_proto_enumTypes[0].Descriptor()
}

func (UserMetric_MetricType) Type() protoreflect.EnumType {
	return &file_middleware_v1_metrics_metrics_proto_enumTypes[0]
}

func (x UserMetric_MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserMetric_MetricType.Descriptor instead.
func (UserMetric_MetricType) EnumDescriptor() ([]byte, []int) {
	return file_middleware_v1_metrics_metrics_proto_rawDescGZIP(), []int{0, 0}
}

type UserMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp: indicates the time of indicator data
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Indicator name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Indicator value
	Value float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	// Indicator label for classification or filtering
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Indicator unit
	Unit string                `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	Type UserMetric_MetricType `protobuf:"varint,6,opt,name=type,proto3,enum=middleware.v1.metrics.UserMetric_MetricType" json:"type,omitempty"`
	// Description of indicators
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Indicator context information
	Context string `protobuf:"bytes,8,opt,name=context,proto3" json:"context,omitempty"`
	// Additional information for metrics that can be used to store arbitrary metadata
	Metadata      map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMetric) Reset() {
	*x = UserMetric{}
	mi := &file_middleware_v1_metrics_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetric) ProtoMessage() {}

func (x *UserMetric) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_metrics_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetric.ProtoReflect.Descriptor instead.
func (*UserMetric) Descriptor() ([]byte, []int) {
	return file_middleware_v1_metrics_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *UserMetric) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserMetric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UserMetric) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UserMetric) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *UserMetric) GetType() UserMetric_MetricType {
	if x != nil {
		return x.Type
	}
	return UserMetric_METRIC_TYPE_UNSPECIFIED
}

func (x *UserMetric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserMetric) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *UserMetric) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Metrics
type Metrics struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Enabled bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Add a list of supported metrics for enabling or disabling specific metrics
	SupportedMetrics []string `protobuf:"bytes,5,rep,name=supported_metrics,proto3" json:"supported_metrics,omitempty"`
	// Repeated field for user-defined metrics
	UserMetrics   []*UserMetric `protobuf:"bytes,6,rep,name=user_metrics,proto3" json:"user_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_middleware_v1_metrics_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_metrics_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_middleware_v1_metrics_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *Metrics) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Metrics) GetSupportedMetrics() []string {
	if x != nil {
		return x.SupportedMetrics
	}
	return nil
}

func (x *Metrics) GetUserMetrics() []*UserMetric {
	if x != nil {
		return x.UserMetrics
	}
	return nil
}

var File_middleware_v1_metrics_metrics_proto protoreflect.FileDescriptor

const file_middleware_v1_metrics_metrics_proto_rawDesc = "" +
	"\n" +
	"#middleware/v1/metrics/metrics.proto\x12\x15middleware.v1.metrics\"\x82\x05\n" +
	"\n" +
	"UserMetric\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x01R\x05value\x12E\n" +
	"\x06labels\x18\x04 \x03(\v2-.middleware.v1.metrics.UserMetric.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12@\n" +
	"\x04type\x18\x06 \x01(\x0e2,.middleware.v1.metrics.UserMetric.MetricTypeR\x04type\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x18\n" +
	"\acontext\x18\b \x01(\tR\acontext\x12K\n" +
	"\bmetadata\x18\t \x03(\v2/.middleware.v1.metrics.UserMetric.MetadataEntryR\bmetadata\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x01\n" +
	"\n" +
	"MetricType\x12\x1b\n" +
	"\x17METRIC_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13METRIC_TYPE_COUNTER\x10\x01\x12\x15\n" +
	"\x11METRIC_TYPE_GAUGE\x10\x02\x12\x19\n" +
	"\x15METRIC_TYPE_HISTOGRAM\x10\x03\x12\x17\n" +
	"\x13METRIC_TYPE_SUMMARY\x10\x04\"\x98\x01\n" +
	"\aMetrics\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12,\n" +
	"\x11supported_metrics\x18\x05 \x03(\tR\x11supported_metrics\x12E\n" +
	"\fuser_metrics\x18\x06 \x03(\v2!.middleware.v1.metrics.UserMetricR\fuser_metricsB\xeb\x01\n" +
	"\x19com.middleware.v1.metricsB\fMetricsProtoP\x01ZGgithub.com/origadmin/runtime/api/gen/go/middleware/v1/metrics;metricsv1\xf8\x01\x01\xa2\x02\x03MVM\xaa\x02\x15Middleware.V1.Metrics\xca\x02\x15Middleware\\V1\\Metrics\xe2\x02!Middleware\\V1\\Metrics\\GPBMetadata\xea\x02\x17Middleware::V1::Metricsb\x06proto3"

var (
	file_middleware_v1_metrics_metrics_proto_rawDescOnce sync.Once
	file_middleware_v1_metrics_metrics_proto_rawDescData []byte
)

func file_middleware_v1_metrics_metrics_proto_rawDescGZIP() []byte {
	file_middleware_v1_metrics_metrics_proto_rawDescOnce.Do(func() {
		file_middleware_v1_metrics_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_v1_metrics_metrics_proto_rawDesc), len(file_middleware_v1_metrics_metrics_proto_rawDesc)))
	})
	return file_middleware_v1_metrics_metrics_proto_rawDescData
}

var file_middleware_v1_metrics_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_middleware_v1_metrics_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_middleware_v1_metrics_metrics_proto_goTypes = []any{
	(UserMetric_MetricType)(0), // 0: middleware.v1.metrics.UserMetric.MetricType
	(*UserMetric)(nil),         // 1: middleware.v1.metrics.UserMetric
	(*Metrics)(nil),            // 2: middleware.v1.metrics.Metrics
	nil,                        // 3: middleware.v1.metrics.UserMetric.LabelsEntry
	nil,                        // 4: middleware.v1.metrics.UserMetric.MetadataEntry
}
var file_middleware_v1_metrics_metrics_proto_depIdxs = []int32{
	3, // 0: middleware.v1.metrics.UserMetric.labels:type_name -> middleware.v1.metrics.UserMetric.LabelsEntry
	0, // 1: middleware.v1.metrics.UserMetric.type:type_name -> middleware.v1.metrics.UserMetric.MetricType
	4, // 2: middleware.v1.metrics.UserMetric.metadata:type_name -> middleware.v1.metrics.UserMetric.MetadataEntry
	1, // 3: middleware.v1.metrics.Metrics.user_metrics:type_name -> middleware.v1.metrics.UserMetric
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_middleware_v1_metrics_metrics_proto_init() }
func file_middleware_v1_metrics_metrics_proto_init() {
	if File_middleware_v1_metrics_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_v1_metrics_metrics_proto_rawDesc), len(file_middleware_v1_metrics_metrics_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_middleware_v1_metrics_metrics_proto_goTypes,
		DependencyIndexes: file_middleware_v1_metrics_metrics_proto_depIdxs,
		EnumInfos:         file_middleware_v1_metrics_metrics_proto_enumTypes,
		MessageInfos:      file_middleware_v1_metrics_metrics_proto_msgTypes,
	}.Build()
	File_middleware_v1_metrics_metrics_proto = out.File
	file_middleware_v1_metrics_metrics_proto_goTypes = nil
	file_middleware_v1_metrics_metrics_proto_depIdxs = nil
}
