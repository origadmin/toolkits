// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: middleware/v1/ratelimit/ratelimiter.proto

package ratelimitv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Rate limiter
type RateLimiter struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Enabled bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// rate limiter name, supported: bbr, memory, redis.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The number of seconds in a rate limit window
	Period int32 `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	// The number of requests allowed in a window of time
	XRatelimitLimit int32 `protobuf:"varint,5,opt,name=x_ratelimit_limit,proto3" json:"x_ratelimit_limit,omitempty"`
	// The number of requests that can still be made in the current window of time
	XRatelimitRemaining int32 `protobuf:"varint,6,opt,name=x_ratelimit_remaining,proto3" json:"x_ratelimit_remaining,omitempty"`
	// The number of seconds until the current rate limit window completely resets
	XRatelimitReset int32 `protobuf:"varint,7,opt,name=x_ratelimit_reset,proto3" json:"x_ratelimit_reset,omitempty"`
	// When rate limited, the number of seconds to wait before another request will be accepted
	RetryAfter    int32               `protobuf:"varint,8,opt,name=retry_after,proto3" json:"retry_after,omitempty"`
	Memory        *RateLimiter_Memory `protobuf:"bytes,101,opt,name=memory,proto3" json:"memory,omitempty"`
	Redis         *RateLimiter_Redis  `protobuf:"bytes,102,opt,name=redis,proto3" json:"redis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimiter) Reset() {
	*x = RateLimiter{}
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter) ProtoMessage() {}

func (x *RateLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter.ProtoReflect.Descriptor instead.
func (*RateLimiter) Descriptor() ([]byte, []int) {
	return file_middleware_v1_ratelimit_ratelimiter_proto_rawDescGZIP(), []int{0}
}

func (x *RateLimiter) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RateLimiter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RateLimiter) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *RateLimiter) GetXRatelimitLimit() int32 {
	if x != nil {
		return x.XRatelimitLimit
	}
	return 0
}

func (x *RateLimiter) GetXRatelimitRemaining() int32 {
	if x != nil {
		return x.XRatelimitRemaining
	}
	return 0
}

func (x *RateLimiter) GetXRatelimitReset() int32 {
	if x != nil {
		return x.XRatelimitReset
	}
	return 0
}

func (x *RateLimiter) GetRetryAfter() int32 {
	if x != nil {
		return x.RetryAfter
	}
	return 0
}

func (x *RateLimiter) GetMemory() *RateLimiter_Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *RateLimiter) GetRedis() *RateLimiter_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

type RateLimiter_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimiter_Redis) Reset() {
	*x = RateLimiter_Redis{}
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimiter_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter_Redis) ProtoMessage() {}

func (x *RateLimiter_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter_Redis.ProtoReflect.Descriptor instead.
func (*RateLimiter_Redis) Descriptor() ([]byte, []int) {
	return file_middleware_v1_ratelimit_ratelimiter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RateLimiter_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RateLimiter_Redis) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RateLimiter_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RateLimiter_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

type RateLimiter_Memory struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Expiration      int64                  `protobuf:"varint,1,opt,name=expiration,proto3" json:"expiration,omitempty"`
	CleanupInterval int64                  `protobuf:"varint,2,opt,name=cleanup_interval,proto3" json:"cleanup_interval,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RateLimiter_Memory) Reset() {
	*x = RateLimiter_Memory{}
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimiter_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter_Memory) ProtoMessage() {}

func (x *RateLimiter_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter_Memory.ProtoReflect.Descriptor instead.
func (*RateLimiter_Memory) Descriptor() ([]byte, []int) {
	return file_middleware_v1_ratelimit_ratelimiter_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RateLimiter_Memory) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *RateLimiter_Memory) GetCleanupInterval() int64 {
	if x != nil {
		return x.CleanupInterval
	}
	return 0
}

var File_middleware_v1_ratelimit_ratelimiter_proto protoreflect.FileDescriptor

const file_middleware_v1_ratelimit_ratelimiter_proto_rawDesc = "" +
	"\n" +
	")middleware/v1/ratelimit/ratelimiter.proto\x12\x17middleware.v1.ratelimit\x1a\x17validate/validate.proto\"\xe4\x04\n" +
	"\vRateLimiter\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12-\n" +
	"\x04name\x18\x02 \x01(\tB\x19\xfaB\x16r\x14R\x03bbrR\x06memoryR\x05redisR\x04name\x12\x16\n" +
	"\x06period\x18\x03 \x01(\x05R\x06period\x12,\n" +
	"\x11x_ratelimit_limit\x18\x05 \x01(\x05R\x11x_ratelimit_limit\x124\n" +
	"\x15x_ratelimit_remaining\x18\x06 \x01(\x05R\x15x_ratelimit_remaining\x12,\n" +
	"\x11x_ratelimit_reset\x18\a \x01(\x05R\x11x_ratelimit_reset\x12 \n" +
	"\vretry_after\x18\b \x01(\x05R\vretry_after\x12C\n" +
	"\x06memory\x18e \x01(\v2+.middleware.v1.ratelimit.RateLimiter.MemoryR\x06memory\x12@\n" +
	"\x05redis\x18f \x01(\v2*.middleware.v1.ratelimit.RateLimiter.RedisR\x05redis\x1ac\n" +
	"\x05Redis\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x1aT\n" +
	"\x06Memory\x12\x1e\n" +
	"\n" +
	"expiration\x18\x01 \x01(\x03R\n" +
	"expiration\x12*\n" +
	"\x10cleanup_interval\x18\x02 \x01(\x03R\x10cleanup_intervalB\xfd\x01\n" +
	"\x1bcom.middleware.v1.ratelimitB\x10RatelimiterProtoP\x01ZKgithub.com/origadmin/runtime/api/gen/go/middleware/v1/ratelimit;ratelimitv1\xf8\x01\x01\xa2\x02\x03MVR\xaa\x02\x17Middleware.V1.Ratelimit\xca\x02\x17Middleware\\V1\\Ratelimit\xe2\x02#Middleware\\V1\\Ratelimit\\GPBMetadata\xea\x02\x19Middleware::V1::Ratelimitb\x06proto3"

var (
	file_middleware_v1_ratelimit_ratelimiter_proto_rawDescOnce sync.Once
	file_middleware_v1_ratelimit_ratelimiter_proto_rawDescData []byte
)

func file_middleware_v1_ratelimit_ratelimiter_proto_rawDescGZIP() []byte {
	file_middleware_v1_ratelimit_ratelimiter_proto_rawDescOnce.Do(func() {
		file_middleware_v1_ratelimit_ratelimiter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_v1_ratelimit_ratelimiter_proto_rawDesc), len(file_middleware_v1_ratelimit_ratelimiter_proto_rawDesc)))
	})
	return file_middleware_v1_ratelimit_ratelimiter_proto_rawDescData
}

var file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_middleware_v1_ratelimit_ratelimiter_proto_goTypes = []any{
	(*RateLimiter)(nil),        // 0: middleware.v1.ratelimit.RateLimiter
	(*RateLimiter_Redis)(nil),  // 1: middleware.v1.ratelimit.RateLimiter.Redis
	(*RateLimiter_Memory)(nil), // 2: middleware.v1.ratelimit.RateLimiter.Memory
}
var file_middleware_v1_ratelimit_ratelimiter_proto_depIdxs = []int32{
	2, // 0: middleware.v1.ratelimit.RateLimiter.memory:type_name -> middleware.v1.ratelimit.RateLimiter.Memory
	1, // 1: middleware.v1.ratelimit.RateLimiter.redis:type_name -> middleware.v1.ratelimit.RateLimiter.Redis
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_middleware_v1_ratelimit_ratelimiter_proto_init() }
func file_middleware_v1_ratelimit_ratelimiter_proto_init() {
	if File_middleware_v1_ratelimit_ratelimiter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_v1_ratelimit_ratelimiter_proto_rawDesc), len(file_middleware_v1_ratelimit_ratelimiter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_middleware_v1_ratelimit_ratelimiter_proto_goTypes,
		DependencyIndexes: file_middleware_v1_ratelimit_ratelimiter_proto_depIdxs,
		MessageInfos:      file_middleware_v1_ratelimit_ratelimiter_proto_msgTypes,
	}.Build()
	File_middleware_v1_ratelimit_ratelimiter_proto = out.File
	file_middleware_v1_ratelimit_ratelimiter_proto_goTypes = nil
	file_middleware_v1_ratelimit_ratelimiter_proto_depIdxs = nil
}
