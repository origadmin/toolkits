// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pagination/v1/pagination.proto

package paginationv1

import (
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PageRequest common request
type PageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// current page number
	Current *int32 `protobuf:"varint,1,opt,name=current,proto3,oneof" json:"current,omitempty"`
	// The number of lines per page
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,proto3,oneof" json:"page_size,omitempty"`
	// The page_token is the query parameter for set the page token.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,proto3" json:"page_token,omitempty"`
	// The only_count is the query parameter for set only to query the total number
	OnlyCount bool `protobuf:"varint,4,opt,name=only_count,proto3" json:"only_count,omitempty"`
	// The no_paging is used to disable pagination.
	NoPaging *bool `protobuf:"varint,5,opt,name=no_paging,proto3,oneof" json:"no_paging,omitempty"`
	// sort condition
	OrderBy string `protobuf:"bytes,6,opt,name=order_by,proto3" json:"order_by,omitempty"`
	// Field mask
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,7,opt,name=field_mask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	mi := &file_pagination_v1_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pagination_v1_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_pagination_v1_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PageRequest) GetCurrent() int32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *PageRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *PageRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PageRequest) GetOnlyCount() bool {
	if x != nil {
		return x.OnlyCount
	}
	return false
}

func (x *PageRequest) GetNoPaging() bool {
	if x != nil && x.NoPaging != nil {
		return *x.NoPaging
	}
	return false
}

func (x *PageRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *PageRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// PageResponse general result
type PageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The total number of items in the list.
	TotalSize int32 `protobuf:"varint,1,opt,name=total_size,proto3" json:"total_size,omitempty"`
	// The paging data
	Data []*anypb.Any `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	// The current page number.
	Current *int32 `protobuf:"varint,3,opt,name=current,proto3,oneof" json:"current,omitempty"`
	// The maximum number of items to return.
	PageSize *int32 `protobuf:"varint,4,opt,name=page_size,proto3,oneof" json:"page_size,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,5,opt,name=next_page_token,proto3" json:"next_page_token,omitempty"`
	// Additional information about this response.
	// content to be added without destroying the current data format
	Extra         map[string]*anypb.Any `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageResponse) Reset() {
	*x = PageResponse{}
	mi := &file_pagination_v1_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResponse) ProtoMessage() {}

func (x *PageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pagination_v1_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResponse.ProtoReflect.Descriptor instead.
func (*PageResponse) Descriptor() ([]byte, []int) {
	return file_pagination_v1_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *PageResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *PageResponse) GetData() []*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageResponse) GetCurrent() int32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *PageResponse) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *PageResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *PageResponse) GetExtra() map[string]*anypb.Any {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_pagination_v1_pagination_proto protoreflect.FileDescriptor

const file_pagination_v1_pagination_proto_rawDesc = "" +
	"\n" +
	"\x1epagination/v1/pagination.proto\x12\rpagination.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x19google/protobuf/any.proto\x1a google/protobuf/field_mask.proto\"\xef\x05\n" +
	"\vPageRequest\x12E\n" +
	"\acurrent\x18\x01 \x01(\x05B&\xbaG#\x8a\x02\t\t\x00\x00\x00\x00\x00\x00\xf0?\x92\x02\x14current page number H\x00R\acurrent\x88\x01\x01\x12Q\n" +
	"\tpage_size\x18\x02 \x01(\x05B.\xbaG+\x8a\x02\t\t\x00\x00\x00\x00\x00\x00.@\x92\x02\x1cThe number of lines per pageH\x01R\tpage_size\x88\x01\x01\x122\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\fpaging tokenR\n" +
	"page_token\x126\n" +
	"\n" +
	"only_count\x18\x04 \x01(\bB\x16\xbaG\x13\x92\x02\x10query total onlyR\n" +
	"only_count\x12;\n" +
	"\tno_paging\x18\x05 \x01(\bB\x18\xbaG\x15\x92\x02\x12whether not pagingH\x02R\tno_paging\x88\x01\x01\x12{\n" +
	"\border_by\x18\x06 \x01(\tB_\xbaG\\:\b\x12\x06id:asc\x92\x02Osort condition, field name followed by 'asc' (ascending) or 'desc' (descending)R\border_by\x12\xf7\x01\n" +
	"\n" +
	"field_mask\x18\a \x01(\v2\x1a.google.protobuf.FieldMaskB\xba\x01\xbaG\xb6\x01:\r\x12\vid,name,age\x92\x02\xa3\x01It is used to Update the request message, which is used to perform a partial update to the resource. This mask is related to the resource, not the request message.R\n" +
	"field_maskB\n" +
	"\n" +
	"\b_currentB\f\n" +
	"\n" +
	"_page_sizeB\f\n" +
	"\n" +
	"_no_paging\"\xe8\x04\n" +
	"\fPageResponse\x122\n" +
	"\n" +
	"total_size\x18\x01 \x01(\x05B\x12\xbaG\x0f\x92\x02\ftotal numberR\n" +
	"total_size\x124\n" +
	"\x04data\x18\x02 \x03(\v2\x14.google.protobuf.AnyB\n" +
	"\xbaG\a\x92\x02\x04dataR\x04data\x128\n" +
	"\acurrent\x18\x03 \x01(\x05B\x19\xbaG\x16\x92\x02\x13current page numberH\x00R\acurrent\x88\x01\x01\x12J\n" +
	"\tpage_size\x18\x04 \x01(\x05B'\xbaG$\x92\x02!maximum number of items to returnH\x01R\tpage_size\x88\x01\x01\x12\x8d\x01\n" +
	"\x0fnext_page_token\x18\x05 \x01(\tBc\xbaG`\x92\x02]token to retrieve the next page of results, or empty if there are no more results in the listR\x0fnext_page_token\x12n\n" +
	"\x05extra\x18\x06 \x03(\v2&.pagination.v1.PageResponse.ExtraEntryB0\xbaG-\x92\x02*additional information about this responseR\x05extra\x1aN\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01B\n" +
	"\n" +
	"\b_currentB\f\n" +
	"\n" +
	"_page_sizeB\xc0\x01\n" +
	"\x11com.pagination.v1B\x0fPaginationProtoP\x01ZBgithub.com/origadmin/runtime/api/gen/go/pagination/v1;paginationv1\xf8\x01\x01\xa2\x02\x03PXX\xaa\x02\rPagination.V1\xca\x02\rPagination\\V1\xe2\x02\x19Pagination\\V1\\GPBMetadata\xea\x02\x0ePagination::V1b\x06proto3"

var (
	file_pagination_v1_pagination_proto_rawDescOnce sync.Once
	file_pagination_v1_pagination_proto_rawDescData []byte
)

func file_pagination_v1_pagination_proto_rawDescGZIP() []byte {
	file_pagination_v1_pagination_proto_rawDescOnce.Do(func() {
		file_pagination_v1_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pagination_v1_pagination_proto_rawDesc), len(file_pagination_v1_pagination_proto_rawDesc)))
	})
	return file_pagination_v1_pagination_proto_rawDescData
}

var file_pagination_v1_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pagination_v1_pagination_proto_goTypes = []any{
	(*PageRequest)(nil),           // 0: pagination.v1.PageRequest
	(*PageResponse)(nil),          // 1: pagination.v1.PageResponse
	nil,                           // 2: pagination.v1.PageResponse.ExtraEntry
	(*fieldmaskpb.FieldMask)(nil), // 3: google.protobuf.FieldMask
	(*anypb.Any)(nil),             // 4: google.protobuf.Any
}
var file_pagination_v1_pagination_proto_depIdxs = []int32{
	3, // 0: pagination.v1.PageRequest.field_mask:type_name -> google.protobuf.FieldMask
	4, // 1: pagination.v1.PageResponse.data:type_name -> google.protobuf.Any
	2, // 2: pagination.v1.PageResponse.extra:type_name -> pagination.v1.PageResponse.ExtraEntry
	4, // 3: pagination.v1.PageResponse.ExtraEntry.value:type_name -> google.protobuf.Any
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pagination_v1_pagination_proto_init() }
func file_pagination_v1_pagination_proto_init() {
	if File_pagination_v1_pagination_proto != nil {
		return
	}
	file_pagination_v1_pagination_proto_msgTypes[0].OneofWrappers = []any{}
	file_pagination_v1_pagination_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pagination_v1_pagination_proto_rawDesc), len(file_pagination_v1_pagination_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pagination_v1_pagination_proto_goTypes,
		DependencyIndexes: file_pagination_v1_pagination_proto_depIdxs,
		MessageInfos:      file_pagination_v1_pagination_proto_msgTypes,
	}.Build()
	File_pagination_v1_pagination_proto = out.File
	file_pagination_v1_pagination_proto_goTypes = nil
	file_pagination_v1_pagination_proto_depIdxs = nil
}
