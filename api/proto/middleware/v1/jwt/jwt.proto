syntax = "proto3";

package middleware.v1.jwt;

import "gnostic/openapi/v3/annotations.proto";
import "security/jwt/v1/config.proto";
import "validate/validate.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/api/gen/go/middleware/v1/jwt;jwtv1";
option java_multiple_files = true;
option java_outer_classname = "JWTProto";
option java_package = "com.github.origadmin.api.runtime.middleware.v1.jwt";
option objc_class_prefix = "OMM";
option php_namespace = "OrigAdmin\\Runtime\\Middleware\\JWT\\V1";

// JSON Web Token
message JWT {
  bool enabled = 1 [json_name = 'enabled'];
  string subject = 2 [json_name = 'subject'];
  string claim_type = 3 [
    json_name = 'claim_type',
    (validate.rules).string = {
      in: [
        "map",
        "registered"
      ]
    },
    (gnostic.openapi.v3.property) = {description: "The type of the claim used to extract the token."}
  ];
  map<string, string> token_header = 4 [json_name = 'token_header'];
  // The token used security.jwt.v1.
  security.jwt.v1.Config config = 100 [
    json_name = "config",
    (gnostic.openapi.v3.property) = {description: "The configuration used to create the token."}
  ];
}
