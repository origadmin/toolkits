syntax = "proto3";

package middleware.v1;

import "middleware/v1/jwt/jwt.proto";
import "middleware/v1/metrics/metrics.proto";
import "middleware/v1/ratelimit/ratelimiter.proto";
import "middleware/v1/selector/selector.proto";
import "middleware/v1/validator/validator.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/api/gen/go/middleware/v1;middlewarev1";
option java_multiple_files = true;
option java_outer_classname = "MiddlewareProto";
option java_package = "com.github.origadmin.api.runtime.middleware.v1";
option objc_class_prefix = "OMX";
option php_namespace = "OrigAdmin\\Runtime\\Middleware\\V1";

// UserMetric: used to report user-defined metrics
// Example:
//    request_count := UserMetric {
//      timestamp: 1633072800,
//      name: "request_count",
//      value: 12345,
//      labels: {
//        "service": "api_service",
//        "endpoint": "/users"
//      },
//      unit: "requests",
//      type: COUNTER,
//      description: "Number of requests to the API service",
//      context: "Production environment",
//      metadata: {
//        "region": "us-west-1",
//        "instance_id": "i-0123456789abcdef0"
//      }
//    };
//
//    response_time := UserMetric {
//      timestamp: 1633072800,
//      name: "response_time",
//      value: 0.25,
//      labels: {
//        "service": "api_service",
//        "endpoint": "/users"
//      },
//      unit: "seconds",
//      type: GAUGE,
//      description: "Average response time of the API service",
//      context: "Production environment",
//      metadata: {
//        "region": "us-west-1",
//        "instance_id": "i-0123456789abcdef0"
//      }
//    };

enum MiddlewareName {
  MIDDLEWARE_NAME_UNSPECIFIED = 0;
  MIDDLEWARE_NAME_LOGGING = 1;
  MIDDLEWARE_NAME_RECOVERY = 2;
  MIDDLEWARE_NAME_TRACING = 3;
  MIDDLEWARE_NAME_CIRCUIT_BREAKER = 4;
  MIDDLEWARE_NAME_METADATA = 5;
  MIDDLEWARE_NAME_JWT = 6;
  MIDDLEWARE_NAME_RATE_LIMITER = 7;
  MIDDLEWARE_NAME_METRICS = 8;
  MIDDLEWARE_NAME_VALIDATOR = 9;
  MIDDLEWARE_NAME_SELECTOR = 10;
  MIDDLEWARE_NAME_CUSTOMIZE = 11;
}

// Middleware middleware is used to middlewareure middleware for entry
message Middleware {
  // Metadata
  message Metadata {
    bool enabled = 1 [json_name = "enabled"];
    // Metadata prefix
    repeated string prefixes = 2 [json_name = "prefixes"];
    // Metadata data
    map<string, string> data = 3 [json_name = "data"];
  }

  repeated string enabled_middlewares = 1 [json_name = "enabled_middlewares"];

  Metadata metadata = 100 [json_name = "metadata"];
  middleware.v1.ratelimit.RateLimiter rate_limiter = 101 [json_name = "rate_limiter"];
  middleware.v1.metrics.Metrics metrics = 102 [json_name = "metrics"];
  middleware.v1.validator.Validator validator = 103 [json_name = "validator"];
  middleware.v1.jwt.JWT jwt = 104 [json_name = "jwt"];
  middleware.v1.selector.Selector selector = 105 [json_name = "selector"];
}
