// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from io.go.

// Package io contains generated code by adptool.
package io

import (
	io "io"
)

const (
	SeekCurrent = io.SeekCurrent
	SeekEnd     = io.SeekEnd
	SeekStart   = io.SeekStart
)

var (
	Discard          = io.Discard
	EOF              = io.EOF
	ErrClosedPipe    = io.ErrClosedPipe
	ErrNoProgress    = io.ErrNoProgress
	ErrShortBuffer   = io.ErrShortBuffer
	ErrShortWrite    = io.ErrShortWrite
	ErrUnexpectedEOF = io.ErrUnexpectedEOF
)

type (
	ByteReader      = io.ByteReader
	ByteScanner     = io.ByteScanner
	ByteWriter      = io.ByteWriter
	Closer          = io.Closer
	LimitedReader   = io.LimitedReader
	OffsetWriter    = io.OffsetWriter
	PipeReader      = io.PipeReader
	PipeWriter      = io.PipeWriter
	ReadCloser      = io.ReadCloser
	ReadSeekCloser  = io.ReadSeekCloser
	ReadSeeker      = io.ReadSeeker
	ReadWriteCloser = io.ReadWriteCloser
	ReadWriteSeeker = io.ReadWriteSeeker
	ReadWriter      = io.ReadWriter
	Reader          = io.Reader
	ReaderAt        = io.ReaderAt
	ReaderFrom      = io.ReaderFrom
	RuneReader      = io.RuneReader
	RuneScanner     = io.RuneScanner
	SectionReader   = io.SectionReader
	Seeker          = io.Seeker
	StringWriter    = io.StringWriter
	WriteCloser     = io.WriteCloser
	WriteSeeker     = io.WriteSeeker
	Writer          = io.Writer
	WriterAt        = io.WriterAt
	WriterTo        = io.WriterTo
)

func StdCopy(dst io.Writer, src io.Reader) (written int64, err error) {
	return io.Copy(dst, src)
}

func StdCopyBuffer(dst io.Writer, src io.Reader, buf []byte) (written int64, err error) {
	return io.CopyBuffer(dst, src, buf)
}

func StdCopyN(dst io.Writer, src io.Reader, n int64) (written int64, err error) {
	return io.CopyN(dst, src, n)
}

func StdLimitReader(r io.Reader, n int64) io.Reader {
	return io.LimitReader(r, n)
}

func StdMultiReader(readers ...io.Reader) io.Reader {
	return io.MultiReader(readers...)
}

func StdMultiWriter(writers ...io.Writer) io.Writer {
	return io.MultiWriter(writers...)
}

func StdNewOffsetWriter(w io.WriterAt, off int64) *io.OffsetWriter {
	return io.NewOffsetWriter(w, off)
}

func StdNewSectionReader(r io.ReaderAt, off int64, n int64) *io.SectionReader {
	return io.NewSectionReader(r, off, n)
}

func StdNopCloser(r io.Reader) io.ReadCloser {
	return io.NopCloser(r)
}

func StdPipe() (*io.PipeReader, *io.PipeWriter) {
	return io.Pipe()
}

func StdReadAll(r io.Reader) ([]byte, error) {
	return io.ReadAll(r)
}

func StdReadAtLeast(r io.Reader, buf []byte, min int) (n int, err error) {
	return io.ReadAtLeast(r, buf, min)
}

func StdReadFull(r io.Reader, buf []byte) (n int, err error) {
	return io.ReadFull(r, buf)
}

func StdTeeReader(r io.Reader, w io.Writer) io.Reader {
	return io.TeeReader(r, w)
}

func StdWriteString(w io.Writer, s string) (n int, err error) {
	return io.WriteString(w, s)
}
