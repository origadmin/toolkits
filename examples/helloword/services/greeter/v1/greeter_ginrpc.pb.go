// Code generated by protoc-gen-go-ginrpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-ginrpc unknown
// - protoc             (unknown)
// source: greeter/v1/greeter.proto

package greeter

import (
	context "context"
	gins "github.com/origadmin/contrib/transport/gins"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(context.Context)

const _ = gins.SupportPackageIsVersion1

const GreeterService_SayHello_FullOperation = "/greeter.v1.GreeterService/SayHello"

type GreeterServiceGINRPCAgentResponder interface {
	// Error returns a error
	Error(*gins.Context, int, error)
	// JSON returns a json data
	JSON(*gins.Context, int, any)
	// Any returns errors or any data
	Any(*gins.Context, int, any, error)
}

type GreeterServiceGINRPCAgent interface {
	GreeterServiceGINRPCAgentResponder
	// SayHello Sends a greeting
	SayHello(*gins.Context, *SayHelloRequest)
}

func RegisterGreeterServiceGINRPCAgent(router gins.IRouter, srv GreeterServiceGINRPCAgent) {
	router.POST("/say_hello", _GreeterService_SayHello0_GINRPC_Handler(srv))
	router.GET("/helloworld/:name", _GreeterService_SayHello1_GINRPC_Handler(srv))
}

func _GreeterService_SayHello0_GINRPC_Handler(srv GreeterServiceGINRPCAgent) gins.HandlerFunc {
	return func(ctx *gins.Context) {
		var in SayHelloRequest
		if err := gins.BindBody(ctx, &in); err != nil {
			srv.Error(ctx, 400, err)
			return
		}
		if err := gins.BindQuery(ctx, &in); err != nil {
			srv.Error(ctx, 400, err)
			return
		}
		gins.SetOperation(ctx, GreeterService_SayHello_OperationName)
		srv.SayHello(ctx, &in)
	}
}

func _GreeterService_SayHello1_GINRPC_Handler(srv GreeterServiceGINRPCAgent) gins.HandlerFunc {
	return func(ctx *gins.Context) {
		var in SayHelloRequest
		if err := gins.BindQuery(ctx, &in); err != nil {
			srv.Error(ctx, 400, err)
			return
		}
		if err := gins.BindURI(ctx, &in); err != nil {
			srv.Error(ctx, 400, err)
			return
		}
		gins.SetOperation(ctx, GreeterService_SayHello_OperationName)
		srv.SayHello(ctx, &in)
	}
}
