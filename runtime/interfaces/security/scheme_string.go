// Code generated by "stringer -type=Scheme -trimprefix=Scheme"; DO NOT EDIT.

package security

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SchemeAnonymous-0]
	_ = x[SchemeBasic-1]
	_ = x[SchemeBearer-2]
	_ = x[SchemeDigest-3]
	_ = x[SchemeHOBA-4]
	_ = x[SchemeMutual-5]
	_ = x[SchemeNegotiate-6]
	_ = x[SchemeVapid-7]
	_ = x[SchemeSCRAM-8]
	_ = x[SchemeAWS4HMAC256-9]
	_ = x[SchemeDPoP-10]
	_ = x[SchemeGNAP-11]
	_ = x[SchemePrivate-12]
	_ = x[SchemeOAuth-13]
	_ = x[SchemeUnknown-14]
	_ = x[SchemeMax-15]
}

const _Scheme_name = "AnonymousBasicBearerDigestHOBAMutualNegotiateVapidSCRAMAWS4HMAC256DPoPGNAPPrivateOAuthUnknownMax"

var _Scheme_index = [...]uint8{0, 9, 14, 20, 26, 30, 36, 45, 50, 55, 66, 70, 74, 81, 86, 93, 96}

func (i Scheme) String() string {
	if i < 0 || i >= Scheme(len(_Scheme_index)-1) {
		return "Scheme(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Scheme_name[_Scheme_index[i]:_Scheme_index[i+1]]
}
