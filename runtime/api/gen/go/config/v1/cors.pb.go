// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config/v1/cors.proto

package configv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Cors
type Cors struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enabled indicates whether CORS should be enabled for the target.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// AllowCredentials indicates whether the request can include user credentials like
	// cookies, HTTP authentication or client side SSL certificates.
	AllowCredentials bool `protobuf:"varint,2,opt,name=allow_credentials,proto3" json:"allow_credentials,omitempty"`
	// AllowOrigins is a list of origins a cross-domain request can be executed from.
	// If the special "*" value is present in the list, all origins will be allowed.
	// Default value is [*]
	AllowOrigins []string `protobuf:"bytes,3,rep,name=allow_origins,proto3" json:"allow_origins,omitempty"`
	// AllowMethods is a list of methods the client is allowed to use with
	// cross-domain requests. Default value is simple methods (GET, POST, PUT, PATCH, DELETE, HEAD, and OPTIONS)
	AllowMethods []string `protobuf:"bytes,4,rep,name=allow_methods,proto3" json:"allow_methods,omitempty"`
	// AllowHeaders is list of non simple headers the client is allowed to use with
	// cross-domain requests.
	AllowHeaders []string `protobuf:"bytes,5,rep,name=allow_headers,proto3" json:"allow_headers,omitempty"`
	// ExposeHeaders indicates which headers are safe to expose to the API of a CORS
	// API specification
	ExposeHeaders []string `protobuf:"bytes,6,rep,name=expose_headers,proto3" json:"expose_headers,omitempty"`
	// MaxAge indicates how long (with second-precision) the results of a preflight request
	// can be cached
	MaxAge int64 `protobuf:"varint,7,opt,name=max_age,proto3" json:"max_age,omitempty"`
	// Allows to add origins like http://some-domain/*, https://api.* or http://some.*.subdomain.com
	AllowWildcard bool `protobuf:"varint,8,opt,name=allow_wildcard,proto3" json:"allow_wildcard,omitempty"`
	// Allows usage of popular browser extensions schemas
	AllowBrowserExtensions bool `protobuf:"varint,9,opt,name=allow_browser_extensions,proto3" json:"allow_browser_extensions,omitempty"`
	// Allows usage of WebSocket protocol
	AllowWebSockets bool `protobuf:"varint,10,opt,name=allow_web_sockets,proto3" json:"allow_web_sockets,omitempty"`
	// Allows usage of private network addresses (127.0.0.1, [::1], localhost)
	AllowPrivateNetwork bool `protobuf:"varint,11,opt,name=allow_private_network,proto3" json:"allow_private_network,omitempty"`
	// Allows usage of file:// schema (dangerous!) use it only when you 100% sure it's needed
	AllowFiles    bool `protobuf:"varint,12,opt,name=allow_files,proto3" json:"allow_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cors) Reset() {
	*x = Cors{}
	mi := &file_config_v1_cors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cors) ProtoMessage() {}

func (x *Cors) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_cors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cors.ProtoReflect.Descriptor instead.
func (*Cors) Descriptor() ([]byte, []int) {
	return file_config_v1_cors_proto_rawDescGZIP(), []int{0}
}

func (x *Cors) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Cors) GetAllowCredentials() bool {
	if x != nil {
		return x.AllowCredentials
	}
	return false
}

func (x *Cors) GetAllowOrigins() []string {
	if x != nil {
		return x.AllowOrigins
	}
	return nil
}

func (x *Cors) GetAllowMethods() []string {
	if x != nil {
		return x.AllowMethods
	}
	return nil
}

func (x *Cors) GetAllowHeaders() []string {
	if x != nil {
		return x.AllowHeaders
	}
	return nil
}

func (x *Cors) GetExposeHeaders() []string {
	if x != nil {
		return x.ExposeHeaders
	}
	return nil
}

func (x *Cors) GetMaxAge() int64 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Cors) GetAllowWildcard() bool {
	if x != nil {
		return x.AllowWildcard
	}
	return false
}

func (x *Cors) GetAllowBrowserExtensions() bool {
	if x != nil {
		return x.AllowBrowserExtensions
	}
	return false
}

func (x *Cors) GetAllowWebSockets() bool {
	if x != nil {
		return x.AllowWebSockets
	}
	return false
}

func (x *Cors) GetAllowPrivateNetwork() bool {
	if x != nil {
		return x.AllowPrivateNetwork
	}
	return false
}

func (x *Cors) GetAllowFiles() bool {
	if x != nil {
		return x.AllowFiles
	}
	return false
}

var File_config_v1_cors_proto protoreflect.FileDescriptor

const file_config_v1_cors_proto_rawDesc = "" +
	"\n" +
	"\x14config/v1/cors.proto\x12\tconfig.v1\"\xec\x03\n" +
	"\x04Cors\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12,\n" +
	"\x11allow_credentials\x18\x02 \x01(\bR\x11allow_credentials\x12$\n" +
	"\rallow_origins\x18\x03 \x03(\tR\rallow_origins\x12$\n" +
	"\rallow_methods\x18\x04 \x03(\tR\rallow_methods\x12$\n" +
	"\rallow_headers\x18\x05 \x03(\tR\rallow_headers\x12&\n" +
	"\x0eexpose_headers\x18\x06 \x03(\tR\x0eexpose_headers\x12\x18\n" +
	"\amax_age\x18\a \x01(\x03R\amax_age\x12&\n" +
	"\x0eallow_wildcard\x18\b \x01(\bR\x0eallow_wildcard\x12:\n" +
	"\x18allow_browser_extensions\x18\t \x01(\bR\x18allow_browser_extensions\x12,\n" +
	"\x11allow_web_sockets\x18\n" +
	" \x01(\bR\x11allow_web_sockets\x124\n" +
	"\x15allow_private_network\x18\v \x01(\bR\x15allow_private_network\x12 \n" +
	"\vallow_files\x18\f \x01(\bR\vallow_filesB\x9e\x01\n" +
	"\rcom.config.v1B\tCorsProtoP\x01Z:github.com/origadmin/runtime/api/gen/go/config/v1;configv1\xf8\x01\x01\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_cors_proto_rawDescOnce sync.Once
	file_config_v1_cors_proto_rawDescData []byte
)

func file_config_v1_cors_proto_rawDescGZIP() []byte {
	file_config_v1_cors_proto_rawDescOnce.Do(func() {
		file_config_v1_cors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_cors_proto_rawDesc), len(file_config_v1_cors_proto_rawDesc)))
	})
	return file_config_v1_cors_proto_rawDescData
}

var file_config_v1_cors_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_v1_cors_proto_goTypes = []any{
	(*Cors)(nil), // 0: config.v1.Cors
}
var file_config_v1_cors_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_config_v1_cors_proto_init() }
func file_config_v1_cors_proto_init() {
	if File_config_v1_cors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_cors_proto_rawDesc), len(file_config_v1_cors_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_cors_proto_goTypes,
		DependencyIndexes: file_config_v1_cors_proto_depIdxs,
		MessageInfos:      file_config_v1_cors_proto_msgTypes,
	}.Build()
	File_config_v1_cors_proto = out.File
	file_config_v1_cors_proto_goTypes = nil
	file_config_v1_cors_proto_depIdxs = nil
}
