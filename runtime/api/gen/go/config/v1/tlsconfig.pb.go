// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config/v1/tlsconfig.proto

package configv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TLSConfig
type TLSConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *TLSConfig_File        `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Pem           *TLSConfig_PEM         `protobuf:"bytes,2,opt,name=pem,proto3" json:"pem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_config_v1_tlsconfig_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tlsconfig_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_config_v1_tlsconfig_proto_rawDescGZIP(), []int{0}
}

func (x *TLSConfig) GetFile() *TLSConfig_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TLSConfig) GetPem() *TLSConfig_PEM {
	if x != nil {
		return x.Pem
	}
	return nil
}

type TLSConfig_File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cert          string                 `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Ca            string                 `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig_File) Reset() {
	*x = TLSConfig_File{}
	mi := &file_config_v1_tlsconfig_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig_File) ProtoMessage() {}

func (x *TLSConfig_File) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tlsconfig_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig_File.ProtoReflect.Descriptor instead.
func (*TLSConfig_File) Descriptor() ([]byte, []int) {
	return file_config_v1_tlsconfig_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TLSConfig_File) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *TLSConfig_File) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TLSConfig_File) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

type TLSConfig_PEM struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cert          []byte                 `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key           []byte                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Ca            []byte                 `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig_PEM) Reset() {
	*x = TLSConfig_PEM{}
	mi := &file_config_v1_tlsconfig_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig_PEM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig_PEM) ProtoMessage() {}

func (x *TLSConfig_PEM) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tlsconfig_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig_PEM.ProtoReflect.Descriptor instead.
func (*TLSConfig_PEM) Descriptor() ([]byte, []int) {
	return file_config_v1_tlsconfig_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TLSConfig_PEM) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *TLSConfig_PEM) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TLSConfig_PEM) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

var File_config_v1_tlsconfig_proto protoreflect.FileDescriptor

const file_config_v1_tlsconfig_proto_rawDesc = "" +
	"\n" +
	"\x19config/v1/tlsconfig.proto\x12\tconfig.v1\"\xe1\x01\n" +
	"\tTLSConfig\x12-\n" +
	"\x04file\x18\x01 \x01(\v2\x19.config.v1.TLSConfig.FileR\x04file\x12*\n" +
	"\x03pem\x18\x02 \x01(\v2\x18.config.v1.TLSConfig.PEMR\x03pem\x1a<\n" +
	"\x04File\x12\x12\n" +
	"\x04cert\x18\x01 \x01(\tR\x04cert\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\tR\x02ca\x1a;\n" +
	"\x03PEM\x12\x12\n" +
	"\x04cert\x18\x01 \x01(\fR\x04cert\x12\x10\n" +
	"\x03key\x18\x02 \x01(\fR\x03key\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\fR\x02caB\xa3\x01\n" +
	"\rcom.config.v1B\x0eTlsconfigProtoP\x01Z:github.com/origadmin/runtime/api/gen/go/config/v1;configv1\xf8\x01\x01\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_tlsconfig_proto_rawDescOnce sync.Once
	file_config_v1_tlsconfig_proto_rawDescData []byte
)

func file_config_v1_tlsconfig_proto_rawDescGZIP() []byte {
	file_config_v1_tlsconfig_proto_rawDescOnce.Do(func() {
		file_config_v1_tlsconfig_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_tlsconfig_proto_rawDesc), len(file_config_v1_tlsconfig_proto_rawDesc)))
	})
	return file_config_v1_tlsconfig_proto_rawDescData
}

var file_config_v1_tlsconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_v1_tlsconfig_proto_goTypes = []any{
	(*TLSConfig)(nil),      // 0: config.v1.TLSConfig
	(*TLSConfig_File)(nil), // 1: config.v1.TLSConfig.File
	(*TLSConfig_PEM)(nil),  // 2: config.v1.TLSConfig.PEM
}
var file_config_v1_tlsconfig_proto_depIdxs = []int32{
	1, // 0: config.v1.TLSConfig.file:type_name -> config.v1.TLSConfig.File
	2, // 1: config.v1.TLSConfig.pem:type_name -> config.v1.TLSConfig.PEM
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_config_v1_tlsconfig_proto_init() }
func file_config_v1_tlsconfig_proto_init() {
	if File_config_v1_tlsconfig_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_tlsconfig_proto_rawDesc), len(file_config_v1_tlsconfig_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_tlsconfig_proto_goTypes,
		DependencyIndexes: file_config_v1_tlsconfig_proto_depIdxs,
		MessageInfos:      file_config_v1_tlsconfig_proto_msgTypes,
	}.Build()
	File_config_v1_tlsconfig_proto = out.File
	file_config_v1_tlsconfig_proto_goTypes = nil
	file_config_v1_tlsconfig_proto_depIdxs = nil
}
