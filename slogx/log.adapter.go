// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from log.go.

// Package slogx contains generated code by adptool.
package slogx

import (
	"context"
	"io"
	"log"
	slog "log/slog"
	"time"

	devslog "github.com/golang-cz/devslog"
	tint "github.com/lmittmann/tint"
	lumberjack "gopkg.in/natefinch/lumberjack.v2"
)

const (
	Black         = devslog.Black
	Blue          = devslog.Blue
	Cyan          = devslog.Cyan
	Green         = devslog.Green
	Magenta       = devslog.Magenta
	Red           = devslog.Red
	UnknownColor  = devslog.UnknownColor
	White         = devslog.White
	Yellow        = devslog.Yellow
	KindAny       = slog.KindAny
	KindBool      = slog.KindBool
	KindDuration  = slog.KindDuration
	KindFloat64   = slog.KindFloat64
	KindGroup     = slog.KindGroup
	KindInt64     = slog.KindInt64
	KindLogValuer = slog.KindLogValuer
	KindString    = slog.KindString
	KindTime      = slog.KindTime
	KindUint64    = slog.KindUint64
	LevelDebug    = slog.LevelDebug
	LevelError    = slog.LevelError
	LevelInfo     = slog.LevelInfo
	LevelKey      = slog.LevelKey
	LevelWarn     = slog.LevelWarn
	MessageKey    = slog.MessageKey
	SourceKey     = slog.SourceKey
	TimeKey       = slog.TimeKey
)

var DiscardHandler = slog.DiscardHandler

type (
	Color            = devslog.Color
	DevslogOptions   = devslog.Options
	TintOptions      = tint.Options
	LumberjackLogger = lumberjack.Logger
	Attr             = slog.Attr
	Handler          = slog.Handler
	HandlerOptions   = slog.HandlerOptions
	JSONHandler      = slog.JSONHandler
	Kind             = slog.Kind
	Level            = slog.Level
	LevelVar         = slog.LevelVar
	Leveler          = slog.Leveler
	LogValuer        = slog.LogValuer
	Logger           = slog.Logger
	Record           = slog.Record
	Source           = slog.Source
	TextHandler      = slog.TextHandler
	Value            = slog.Value
)

func NewTintHandler(w io.Writer, opts *tint.Options) slog.Handler {
	return tint.NewHandler(w, opts)
}

func TintAttr(color uint8, attr slog.Attr) slog.Attr {
	return tint.Attr(color, attr)
}

func TintErr(err error) slog.Attr {
	return tint.Err(err)
}

func Any(key string, value any) slog.Attr {
	return slog.Any(key, value)
}

func AnyValue(v any) slog.Value {
	return slog.AnyValue(v)
}

func Bool(key string, v bool) slog.Attr {
	return slog.Bool(key, v)
}

func BoolValue(v bool) slog.Value {
	return slog.BoolValue(v)
}

func Debug(msg string, args ...any) {
	slog.Debug(msg, args...)
}

func DebugContext(ctx context.Context, msg string, args ...any) {
	slog.DebugContext(ctx, msg, args...)
}

func Default() *slog.Logger {
	return slog.Default()
}

func Duration(key string, v time.Duration) slog.Attr {
	return slog.Duration(key, v)
}

func DurationValue(v time.Duration) slog.Value {
	return slog.DurationValue(v)
}

func Error(msg string, args ...any) {
	slog.Error(msg, args...)
}

func ErrorContext(ctx context.Context, msg string, args ...any) {
	slog.ErrorContext(ctx, msg, args...)
}

func Float64(key string, v float64) slog.Attr {
	return slog.Float64(key, v)
}

func Float64Value(v float64) slog.Value {
	return slog.Float64Value(v)
}

func Group(key string, args ...any) slog.Attr {
	return slog.Group(key, args...)
}

func GroupValue(as ...slog.Attr) slog.Value {
	return slog.GroupValue(as...)
}

func Info(msg string, args ...any) {
	slog.Info(msg, args...)
}

func InfoContext(ctx context.Context, msg string, args ...any) {
	slog.InfoContext(ctx, msg, args...)
}

func Int(key string, value int) slog.Attr {
	return slog.Int(key, value)
}

func Int64(key string, value int64) slog.Attr {
	return slog.Int64(key, value)
}

func Int64Value(v int64) slog.Value {
	return slog.Int64Value(v)
}

func IntValue(v int) slog.Value {
	return slog.IntValue(v)
}

func Log(ctx context.Context, level slog.Level, msg string, args ...any) {
	slog.Log(ctx, level, msg, args...)
}

func LogAttrs(ctx context.Context, level slog.Level, msg string, attrs ...slog.Attr) {
	slog.LogAttrs(ctx, level, msg, attrs...)
}

func NewJSONHandler(w io.Writer, opts *slog.HandlerOptions) *slog.JSONHandler {
	return slog.NewJSONHandler(w, opts)
}

func NewLogLogger(h slog.Handler, level slog.Level) *log.Logger {
	return slog.NewLogLogger(h, level)
}

func NewRecord(t time.Time, level slog.Level, msg string, pc uintptr) slog.Record {
	return slog.NewRecord(t, level, msg, pc)
}

func NewSlog(h slog.Handler) *slog.Logger {
	return slog.New(h)
}

func NewTextHandler(w io.Writer, opts *slog.HandlerOptions) *slog.TextHandler {
	return slog.NewTextHandler(w, opts)
}

func SetDefault(l *slog.Logger) {
	slog.SetDefault(l)
}

func SetLogLoggerLevel(level slog.Level) (oldLevel slog.Level) {
	return slog.SetLogLoggerLevel(level)
}

func String(key, value string) slog.Attr {
	return slog.String(key, value)
}

func StringValue(value string) slog.Value {
	return slog.StringValue(value)
}

func Time(key string, v time.Time) slog.Attr {
	return slog.Time(key, v)
}

func TimeValue(v time.Time) slog.Value {
	return slog.TimeValue(v)
}

func Uint64(key string, v uint64) slog.Attr {
	return slog.Uint64(key, v)
}

func Uint64Value(v uint64) slog.Value {
	return slog.Uint64Value(v)
}

func Warn(msg string, args ...any) {
	slog.Warn(msg, args...)
}

func WarnContext(ctx context.Context, msg string, args ...any) {
	slog.WarnContext(ctx, msg, args...)
}

func With(args ...any) *slog.Logger {
	return slog.With(args...)
}
