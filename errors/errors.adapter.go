// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from errors.go.

// Package errors contains generated code by adptool.
package errors

import (
	stderr "errors"

	merr "github.com/hashicorp/go-multierror"
	perr "github.com/pkg/errors"
)

var ErrUnsupported = stderr.ErrUnsupported

type (
	MultiError           = merr.Error
	MultiErrorFormatFunc = merr.ErrorFormatFunc
	MultiGroup           = merr.Group
	Frame                = perr.Frame
	StackTrace           = perr.StackTrace
)

func As(err error, target any) bool {
	return stderr.As(err, target)
}

func Is(err, target error) bool {
	return stderr.Is(err, target)
}

func Join(errs ...error) error {
	return stderr.Join(errs...)
}

func New(text string) error {
	return stderr.New(text)
}

func Unwrap(err error) error {
	return stderr.Unwrap(err)
}

func Append(err error, errs ...error) *merr.Error {
	return merr.Append(err, errs...)
}

func Flatten(err error) error {
	return merr.Flatten(err)
}

func ListFormatFunc(es []error) string {
	return merr.ListFormatFunc(es)
}

func Prefix(err error, prefix string) error {
	return merr.Prefix(err, prefix)
}

func PkgAs(err error, target interface{}) bool {
	return perr.As(err, target)
}

func PkgCause(err error) error {
	return perr.Cause(err)
}

func PkgErrorf(format string, args ...interface{}) error {
	return perr.Errorf(format, args...)
}

func PkgIs(err, target error) bool {
	return perr.Is(err, target)
}

func PkgNew(message string) error {
	return perr.New(message)
}

func PkgUnwrap(err error) error {
	return perr.Unwrap(err)
}

func PkgWithMessage(err error, message string) error {
	return perr.WithMessage(err, message)
}

func PkgWithMessagef(err error, format string, args ...interface{}) error {
	return perr.WithMessagef(err, format, args...)
}

func PkgWithStack(err error) error {
	return perr.WithStack(err)
}

func PkgWrap(err error, message string) error {
	return perr.Wrap(err, message)
}

func PkgWrapf(err error, format string, args ...interface{}) error {
	return perr.Wrapf(err, format, args...)
}
